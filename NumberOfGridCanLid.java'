import java.util.*;

public class Hello {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        HashMap<Integer, Integer> map = new HashMap<>();

        int n = sc.nextInt();

        // Read input values and count their frequencies
        for (int i = 0; i < n; i++) {
            int v = sc.nextInt();
            map.put(v, map.getOrDefault(v, 0) + 1);
        }

        int count = 0;

        // Iterate through keys and check conditions
        for (Integer key : map.keySet()) {
            if (key % 2 != 0 && map.containsKey(key + 1)) {
                count += Math.min(map.get(key), map.get(key + 1));
            }
        }

        System.out.println(count);
    }
}
/*
The program must accept N integers as the input. Each odd integer represents a jar. Each even integer represents a lid. A jar X can be closed with lid X+1. The program must print the number of jars that can be closed with lid as the output.

Boundary Condition(s):

1<= N <= 100

1 <= Each integer value <= 10^9

Input Format:

The first line contains N.

The second line contains N integer values separated by a space.

Output Format:

The first line contains an integer value representing the number of jars that can be closed with a lid.

Example Input/Output 1:

Input:

6 1243 10 11

Output: 2

Explanation:

1, 3 and 11 represent the jars..

2, 4 and 10 represent the lids.

Jar 1 can be closed with lid 2.

Jar 3 can be closed with lid 4.

Example Input/Output 2:

Input:

4 100 101 102 103

Output 1
*/
